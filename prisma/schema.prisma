// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User{
  id Int @id @default(autoincrement())
  name String?
  username String @unique
  password String
  active Boolean @default(true)
  type Type
  vendas Venda[]
  product Product[]
}

// Workflow
// - Cria uma lista de produtos
// - Soma o valor deles
// - Salva na tabela de vendas
model Cliente{
  id Int @id @default(autoincrement())
  name String?
  document String?
  compras Venda[]
}
model Product{
  id Int @id @default(autoincrement())
  nome String
  custo Float?
  lucro Float?
  valor Float
  active Boolean @default(true)
  qnt Int @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userUpdate User? @relation(fields: [userId],references: [id])
  userId Int?
  items CartItem[]
  @@map("Products")
}

model Cart{
  id Int @id @default(autoincrement())
  active Boolean @default(true)
  createdAt DateTime @default(now())
  items CartItem[]
  venda Venda?
  @@map("Carts")
}
model CartItem{
  id Int @id @default(autoincrement())
  valor Float
  quantidade Int @default(1)
  cart Cart @relation(fields: [cart_id],references:[id])
  cart_id Int
  product_id Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
  product Product @relation(fields: [product_id],references: [id])

  @@map("Items")
}

model Venda{
  id Int @id @default(autoincrement())
  total Float
  method Payment
  discount Float?
  createdAt DateTime @default(now())
  cart Cart @relation(fields: [cartId], references:[id])
  cartId Int
  user User @relation(fields: [userId],references:[id])
  userId Int
  clientId Int?
  client Cliente? @relation(fields: [clientId],references:[id])
  @@map("Vendas")
}

enum Type{
  ADMIN
  EMPLOYEE
}

enum Payment{
  DINHEIRO
  DEBITO
  CREDITO
  PIX
}